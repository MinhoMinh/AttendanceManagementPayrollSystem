@page "/"
@page "/login"

@using Components.Layout
@layout NoHeaderLayout

@using AttendanceManagementPayrollSystem.DTO
@inject IHttpClientFactory HttpFactory
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Đăng nhập</PageTitle>

<Layout>
    <Container class="mt-5 d-flex justify-content-center">
        <Card Style="width:400px;">
            <CardHeader>
                <h4 class="text-center mb-0">Đăng nhập</h4>
            </CardHeader>

            <CardBody>
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <Alert Color="Color.Danger" Visible="true">
                        @ErrorMessage
                    </Alert>
                }

                <EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />

                    <Field>
                        <Label for="username">Tên đăng nhập</Label>
                        <TextEdit @bind-Text="loginRequest.Username" Placeholder="Nhập tên đăng nhập" />
                    </Field>

                    <Field>
                        <Label for="password">Mật khẩu</Label>
                        <TextEdit @bind-Text="loginRequest.Password" Placeholder="Nhập mật khẩu" TextRole="TextRole.Password" />
                    </Field>

                    <div class="d-flex justify-content-end mt-3">
                        <Button Color="Color.Primary" Type="ButtonType.Submit" Size="Size.Large" FullWidth="true">
                            Đăng nhập
                        </Button>
                    </div>
                </EditForm>
            </CardBody>
        </Card>
    </Container>
</Layout>

@code {
    private LoginRequest loginRequest = new();
    private string ErrorMessage;

    private async Task HandleLogin(EditContext context)
    {
        try
        {
            var client = HttpFactory.CreateClient();
            var response = await client.PostAsJsonAsync("http://localhost:5038/api/auth/login", loginRequest);

            if (!response.IsSuccessStatusCode)
            {
                ErrorMessage = await response.Content.ReadAsStringAsync() ?? "Đăng nhập thất bại";
                return;
            }

            var employeeDto = await response.Content.ReadFromJsonAsync<EmployeeDTO>();

            if (employeeDto?.EmpId != null)
            {
                var employeeJson = System.Text.Json.JsonSerializer.Serialize(employeeDto);
                await JS.InvokeVoidAsync("localStorage.setItem", "employee", employeeJson);
                await JS.InvokeVoidAsync("console.log", employeeDto.EmpId, employeeDto.EmpName, employeeDto.EmpRole, employeeDto.Permissions);
            }

            Navigation.NavigateTo("/dashboard");
        }
        catch (Exception ex)
        {
            ErrorMessage = "Lỗi đăng nhập: " + ex.Message;
        }
    }
}
