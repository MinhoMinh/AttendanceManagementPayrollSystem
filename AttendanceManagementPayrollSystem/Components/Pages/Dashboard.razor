@page "/dashboard"

@using AttendanceManagementPayrollSystem.DTO
@using System.Text.Json
@inject NavigationManager Navigation
@inject IJSRuntime JS

<Layout>
    <LayoutHeader>
        <h4 class="m-2">Bảng điều khiển</h4>
    </LayoutHeader>

    <LayoutContent>
        <div class="m-3">
            <DashboardButtonGroup Buttons="@EmployeeService" GroupName="Dịch vụ nhân viên" />
            <DashboardButtonGroup Buttons="@DepartmentHeadService" GroupName="Dịch vụ trưởng phòng" />
            <DashboardButtonGroup Buttons="@CompanyService" GroupName="Dịch vụ công ty" />
        </div>
    </LayoutContent>

    <LayoutFooter>
        <p class="m-2">Footer</p>
    </LayoutFooter>
</Layout>

<Toaster />

@code {
    bool toastVisible = false;
    private bool isLoading = false;

    private EmployeeDTO? Employee;

    private List<DashboardButton> EmployeeService = new();
    private List<DashboardButton> DepartmentHeadService = new();
    private List<DashboardButton> CompanyService = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        try
        {
            var empJson = await JS.InvokeAsync<string>("localStorage.getItem", "employee");
            if (!string.IsNullOrWhiteSpace(empJson))
            {
                Employee = JsonSerializer.Deserialize<EmployeeDTO>(empJson);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        BuildButtonGroups();
        StateHasChanged();
    }

    private void BuildButtonGroups()
    {
        if (Employee == null) return;

        EmployeeService = new()
        {
            new() { Text = "Attendance", ImageSrc="https://cdn-icons-png.flaticon.com/512/3062/3062634.png", OnClick = EventCallback.Factory.Create(this, NavigateAttendance), Visible = HasPermission("has_clockin") },
            new() { Text = "Self KPI", ImageSrc="https://cdn-icons-png.flaticon.com/512/3135/3135715.png", OnClick = EventCallback.Factory.Create(this, NavigateSelfKpi), Visible = HasPermission("has_kpi") },
            new() { Text = "Shift", ImageSrc="https://cdn-icons-png.flaticon.com/512/1077/1077976.png", OnClick = EventCallback.Factory.Create(this, NavigateSelfShift), Visible = HasPermission("has_shift") },
        };

        DepartmentHeadService = new()
        {
            new() { Text = "Dep KPI", ImageSrc="https://cdn-icons-png.flaticon.com/512/1995/1995574.png", OnClick = EventCallback.Factory.Create(this, NavigateDepKpi), Visible = HasPermission("assign_kpi") },
        };

        CompanyService = new()
        {
            new() { Text = "Upload Clockins", ImageSrc="https://cdn-icons-png.flaticon.com/512/1828/1828926.png", OnClick = EventCallback.Factory.Create(this, NavigateUploadClockins), Visible = HasPermission("upload_clockin") },
            new() { Text = "Pay Run", ImageSrc="https://cdn-icons-png.flaticon.com/512/483/483947.png", OnClick = EventCallback.Factory.Create(this, NavigatePayRun), Visible = HasPermission("view_payroll_run") },
        };
    }

    private bool HasPermission(string task)
    {
        if (Employee?.Permissions == null) return false;
        return Employee.Permissions.Contains(task);
    }

    private void NavigateAttendance() => Navigation.NavigateTo("/attendance/self");
    private void NavigateSelfKpi() => Navigation.NavigateTo("/kpi/self");
    private void NavigateSelfShift() => Navigation.NavigateTo("/shift/self");

    private void NavigateDepKpi() => Navigation.NavigateTo("/kpi/head");

    private void NavigateUploadClockins() => Navigation.NavigateTo("/xlsupload");
    private void NavigatePayRun() => Navigation.NavigateTo("/payruns");
}
