import { useState } from "react";
import "../components/LeaveRequest.css";

export default function LeaveRequest({ onBack }) {
  const [startDate, setStartDate] = useState(""); // ng√†y b·∫Øt ƒë·∫ßu ngh·ªâ
  const [endDate, setEndDate] = useState("");     // ng√†y k·∫øt th√∫c ngh·ªâ
  const [reason, setReason] = useState("");       // l√Ω do
  const [otherReason, setOtherReason] = useState(""); // l√Ω do kh√°c
  const [details, setDetails] = useState("");     // chi ti·∫øt l√Ω do
  const [leaveType, setLeaveType] = useState(""); // lo·∫°i ngh·ªâ (c√≥ ph√©p/kh√¥ng ph√©p)
  const [history, setHistory] = useState([]);
  const [showHistory, setShowHistory] = useState(false);
  const [empId] = useState(3); // ID nh√¢n vi√™n t·∫°m th·ªùi

  const handleSubmit = async (e) => {
  e.preventDefault();

  const typeMap = {
    co_phep: 1,         // Annual Leave
    thai_san: 2,        // Maternity Leave
    nghi_vo_sinh: 3,    // Paternity Leave
    nghi_khong_luong: 4 // Unpaid Leave
  };

  const leaveData = {
    empId: 3,
    startDate,
    endDate,
    reason: reason === "khac" ? otherReason : reason,
    details,
    typeId: typeMap[leaveType],
  };

  try {
    const response = await fetch("https://localhost:7184/api/LeaveRequest", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(leaveData),
    });

    if (response.ok) {
      alert("‚úÖ G·ª≠i ƒë∆°n ngh·ªâ th√†nh c√¥ng!");
      onBack();
    } else {
      alert("‚ùå L·ªói khi g·ª≠i ƒë∆°n ngh·ªâ!");
    }
  } catch (error) {
    console.error("Error:", error);
    alert("‚ö†Ô∏è Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß!");
  }
};
  const fetchHistory = async () => {
    try {
      const res = await fetch(`https://localhost:7184/api/LeaveRequest/history/${empId}`);
      if (!res.ok) throw new Error("Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu l·ªãch s·ª≠!");
      const data = await res.json();
      setHistory(Array.isArray(data) ? data : []);
      setShowHistory(true);
    } catch (err) {
      alert("‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i l·ªãch s·ª≠ ngh·ªâ ph√©p!");
      console.error(err);
    }
  };


  return (
    <div className="leave-wrapper">
      <div className="leave-card">
        {/* N√∫t quay l·∫°i */}
        <button onClick={onBack} className="back-btn">
          ‚¨Ö Quay l·∫°i
        </button>

        <h2>üìÑ ƒê∆°n xin ngh·ªâ</h2>
        <form onSubmit={handleSubmit}>
          {/* Ng√†y b·∫Øt ƒë·∫ßu */}
          <label>
            Ng√†y b·∫Øt ƒë·∫ßu:
            <input
              type="date"
              value={startDate}
              onChange={(e) => setStartDate(e.target.value)}
              required
            />
          </label>

          {/* Ng√†y k·∫øt th√∫c */}
          <label>
            Ng√†y k·∫øt th√∫c:
            <input
              type="date"
              value={endDate}
              onChange={(e) => setEndDate(e.target.value)}
              required
            />
          </label>

          {/* Ch·ªçn lo·∫°i ngh·ªâ */}
          <label>
            Lo·∫°i ngh·ªâ:
            <select
              value={leaveType}
              onChange={(e) => setLeaveType(e.target.value)}
              required
            >
              <option value="">-- Ch·ªçn lo·∫°i ngh·ªâ --</option>
              <option value="co_phep">Ngh·ªâ c√≥ ph√©p</option>
              <option value="thai_san">Ngh·ªâ thai s·∫£n</option>
              <option value="nghi_vo_sinh">Ngh·ªâ v·ª£ sinh</option>
              <option value="nghi_khong_luong">Ngh·ªâ kh√¥ng ph√©p</option>
            </select>
          </label>

          {/* Ch·ªçn l√Ω do ngh·ªâ */}
          <label>
            L√Ω do ngh·ªâ:
            <select
              value={reason}
              onChange={(e) => setReason(e.target.value)}
              required
            >
              <option value="">-- Ch·ªçn l√Ω do --</option>
              <option value="om">·ªêm</option>
              <option value="viec_gia_dinh">Vi·ªác gia ƒë√¨nh</option>
              <option value="khac">Kh√°c</option>
            </select>
          </label>

          {/* N·∫øu ch·ªçn "kh√°c" th√¨ hi·ªán input */}
          {reason === "khac" && (
            <input
              type="text"
              placeholder="Nh·∫≠p l√Ω do kh√°c..."
              value={otherReason}
              onChange={(e) => setOtherReason(e.target.value)}
              required
            />
          )}

          {/* Nh·∫≠p chi ti·∫øt l√Ω do */}
          <label>
            L√Ω do chi ti·∫øt:
            <textarea
              placeholder="Nh·∫≠p chi ti·∫øt l√Ω do ngh·ªâ..."
              value={details}
              onChange={(e) => setDetails(e.target.value)}
              rows={4}
              required
            />
          </label>

          {/* N√∫t g·ª≠i */}
          <button type="submit">G·ª≠i ƒë∆°n</button>
        </form>

        {/* N√∫t xem l·ªãch s·ª≠ */}
        <button onClick={fetchHistory} className="history-btn">
          üìã Xem l·ªãch s·ª≠ ngh·ªâ ph√©p
        </button>

        {/* B·∫£ng l·ªãch s·ª≠ ngh·ªâ ph√©p */}
        {showHistory && (
          <div className="history-section">
            <h3>üïì L·ªãch s·ª≠ ƒë∆°n ngh·ªâ</h3>
            <table className="table-history">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>B·∫Øt ƒë·∫ßu</th>
                  <th>K·∫øt th√∫c</th>
                  <th>L√Ω do</th>
                  <th>Lo·∫°i</th>
                  <th>Tr·∫°ng th√°i</th>
                </tr>
              </thead>
              <tbody>
                {history.length === 0 ? (
                  <tr><td colSpan="6">Kh√¥ng c√≥ ƒë∆°n n√†o</td></tr>
                ) : (
                  history.map((item) => (
                    <tr key={item.reqId}>
                      <td>{item.reqId}</td>
                      <td>{item.startDate.slice(0, 10)}</td>
                      <td>{item.endDate.slice(0, 10)}</td>
                      <td>{item.reason}</td>
                      <td>{item.typeId}</td>
                      <td>{item.status}</td>
                    </tr>
                  ))
                )}
              </tbody>
            </table>
          </div>
        )}
      </div>
    </div>
  );
}
