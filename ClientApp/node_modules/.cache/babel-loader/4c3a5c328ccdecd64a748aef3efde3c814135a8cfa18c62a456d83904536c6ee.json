{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\MyKpiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MonthYearSelector from \"./MonthYearSelector\";\nimport EmployeeKpiView from \"./EmployeeKpiView\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyKpiPage() {\n  _s();\n  const [employeeKpi, setEmployeeKpi] = useState(null);\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [viewMode, setViewMode] = useState(\"view\"); // \"view\" | \"self-score\"\n  const empId = 1; // replace with logged-in employee ID or context\n\n  useEffect(() => {\n    const fetchKpi = async () => {\n      try {\n        const response = await fetch(`/api/EmployeeKpi/${empId}?month=${month}&year=${year}`);\n        if (!response.ok) {\n          // 404 or other errors\n          setEmployeeKpi(null);\n          return;\n        }\n        const data = await response.json();\n        setEmployeeKpi(data);\n      } catch (error) {\n        console.error(\"Failed to fetch KPI:\", error);\n      }\n    };\n    fetchKpi();\n  }, [empId, month, year]);\n\n  // Allow self-score mode only 3 days after the month\n  const today = new Date();\n  const currentMonth = today.getMonth() + 1;\n  const currentYear = today.getFullYear();\n  const canSelfScore = year === currentYear && month === currentMonth && today.getDate() >= 3;\n  const toggleMode = () => {\n    if (viewMode === \"view\" && !canSelfScore) {\n      alert(\"Self-scoring is only available starting 3 days after the month begins.\");\n      return;\n    }\n    setViewMode(prev => prev === \"view\" ? \"self-score\" : \"view\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"My KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MonthYearSelector, {\n      selectedMonth: month,\n      selectedYear: year,\n      onChange: (m, y) => {\n        setMonth(m);\n        setYear(y);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), !employeeKpi ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 mt-4\",\n      children: \"No KPI data available for this period.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          onClick: toggleMode,\n          children: viewMode === \"view\" ? \"Switch to Self-Score\" : \"View Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EmployeeKpiView, {\n        employeeKpi: employeeKpi,\n        mode: viewMode,\n        onToggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(MyKpiPage, \"4I63k14Q+U5qOjx6SCPS+hUV7JU=\");\n_c = MyKpiPage;\nvar _c;\n$RefreshReg$(_c, \"MyKpiPage\");","map":{"version":3,"names":["React","useEffect","useState","MonthYearSelector","EmployeeKpiView","jsxDEV","_jsxDEV","Fragment","_Fragment","MyKpiPage","_s","employeeKpi","setEmployeeKpi","month","setMonth","Date","getMonth","year","setYear","getFullYear","viewMode","setViewMode","empId","fetchKpi","response","fetch","ok","data","json","error","console","today","currentMonth","currentYear","canSelfScore","getDate","toggleMode","alert","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedMonth","selectedYear","onChange","m","y","onClick","mode","onToggleMode","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/pages/MyKpiPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MonthYearSelector from \"./MonthYearSelector\";\nimport EmployeeKpiView from \"./EmployeeKpiView\";\n\nexport default function MyKpiPage() {\n    const [employeeKpi, setEmployeeKpi] = useState(null);\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\n    const [year, setYear] = useState(new Date().getFullYear());\n    const [viewMode, setViewMode] = useState(\"view\"); // \"view\" | \"self-score\"\n    const empId = 1; // replace with logged-in employee ID or context\n\n    useEffect(() => {\n        const fetchKpi = async () => {\n            try {\n                const response = await fetch(\n                    `/api/EmployeeKpi/${empId}?month=${month}&year=${year}`\n                );\n\n                if (!response.ok) {\n                    // 404 or other errors\n                    setEmployeeKpi(null);\n                    return;\n                }\n\n                const data = await response.json();\n                setEmployeeKpi(data);\n            } catch (error) {\n                console.error(\"Failed to fetch KPI:\", error);\n            }\n        };\n\n        fetchKpi();\n    }, [empId, month, year]);\n\n    // Allow self-score mode only 3 days after the month\n    const today = new Date();\n    const currentMonth = today.getMonth() + 1;\n    const currentYear = today.getFullYear();\n    const canSelfScore =\n        year === currentYear && month === currentMonth && today.getDate() >= 3;\n\n    const toggleMode = () => {\n        if (viewMode === \"view\" && !canSelfScore) {\n            alert(\"Self-scoring is only available starting 3 days after the month begins.\");\n            return;\n        }\n        setViewMode((prev) => (prev === \"view\" ? \"self-score\" : \"view\"));\n    };\n\n    return (\n        <div className=\"p-6\">\n            <h1 className=\"text-xl font-bold mb-4\">My KPI</h1>\n\n            <MonthYearSelector\n                selectedMonth={month}\n                selectedYear={year}\n                onChange={(m, y) => {\n                    setMonth(m);\n                    setYear(y);\n                }}\n            />\n\n            {!employeeKpi ? (\n                <p className=\"text-gray-500 mt-4\">No KPI data available for this period.</p>\n            ) : (\n                <>\n                    <div className=\"flex justify-between items-center mb-4\">\n                        <button\n                            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                            onClick={toggleMode}\n                        >\n                            {viewMode === \"view\" ? \"Switch to Self-Score\" : \"View Only\"}\n                        </button>\n                    </div>\n\n                    <EmployeeKpiView\n                        employeeKpi={employeeKpi}\n                        mode={viewMode}\n                        onToggleMode={toggleMode}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}