{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\EmployeeKpiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport KpiPageBase from \"./KpiPageBase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeKpiPage() {\n  _s();\n  const [kpi, setKpi] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n\n  // Get employee info from localStorage\n  const emp = JSON.parse(localStorage.getItem(\"employee\"));\n  const empId = emp === null || emp === void 0 ? void 0 : emp.empId;\n  useEffect(() => {\n    if (!empId) return;\n    fetchKpi(empId, month, year);\n  }, [empId, month, year]);\n  async function fetchKpi(empId, month, year) {\n    setLoading(true);\n    try {\n      const res = await fetch(`http://localhost:5038/api/kpi/self?empId=${empId}&month=${month}&year=${year}`);\n      if (!res.ok) {\n        const text = await res.text(); // read server response\n        throw new Error(`HTTP ${res.status}: ${text}`);\n      }\n      const data = await res.json();\n      setKpi(data);\n    } catch (err) {\n      console.error(err);\n      setKpi(null);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handlePeriodChange(newMonth, newYear) {\n    setMonth(newMonth);\n    setYear(newYear);\n  }\n  async function handleSave(updatedComponents) {\n    if (!kpi || !empId) return;\n    const payload = {\n      periodMonth: kpi.periodMonth,\n      periodYear: kpi.periodYear,\n      components: updatedComponents\n    };\n    console.log(\"Payload:\", JSON.stringify(payload, null, 2)); // log neatly formatted JSON\n\n    try {\n      const res = await fetch(`http://localhost:5038/api/kpi/self/${empId}/score`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        const text = await res.text();\n        throw new Error(`HTTP ${res.status}: ${text}`);\n      }\n      const msg = await res.json();\n      console.log(\"Saved successfully:\", msg);\n\n      // Refresh state to reflect updated data\n      setKpi(prev => ({\n        ...prev,\n        components: updatedComponents\n      }));\n    } catch (err) {\n      console.error(\"Error saving self score:\", err);\n      alert(\"Lỗi khi lưu KPI: \" + err.message);\n    }\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0110ang t\\u1EA3i KPI...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(KpiPageBase, {\n    kpiDto: kpi,\n    onPeriodChange: handlePeriodChange,\n    onSave: handleSave\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeKpiPage, \"cWUGIhpA0znSIceX1VDt1uuIGbw=\");\n_c = EmployeeKpiPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeKpiPage\");","map":{"version":3,"names":["React","useEffect","useState","KpiPageBase","jsxDEV","_jsxDEV","EmployeeKpiPage","_s","kpi","setKpi","loading","setLoading","month","setMonth","Date","getMonth","year","setYear","getFullYear","emp","JSON","parse","localStorage","getItem","empId","fetchKpi","res","fetch","ok","text","Error","status","data","json","err","console","error","handlePeriodChange","newMonth","newYear","handleSave","updatedComponents","payload","periodMonth","periodYear","components","log","stringify","method","headers","body","msg","prev","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","kpiDto","onPeriodChange","onSave","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/pages/EmployeeKpiPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport KpiPageBase from \"./KpiPageBase\";\r\n\r\nexport default function EmployeeKpiPage() {\r\n    const [kpi, setKpi] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = useState(new Date().getFullYear());\r\n\r\n    // Get employee info from localStorage\r\n    const emp = JSON.parse(localStorage.getItem(\"employee\"));\r\n    const empId = emp?.empId;\r\n\r\n    useEffect(() => {\r\n        if (!empId) return;\r\n        fetchKpi(empId, month, year);\r\n    }, [empId, month, year]);\r\n\r\n    async function fetchKpi(empId, month, year) {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(`http://localhost:5038/api/kpi/self?empId=${empId}&month=${month}&year=${year}`);\r\n            if (!res.ok) {\r\n                const text = await res.text(); // read server response\r\n                throw new Error(`HTTP ${res.status}: ${text}`);\r\n            }\r\n            const data = await res.json();\r\n            setKpi(data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setKpi(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    function handlePeriodChange(newMonth, newYear) {\r\n        setMonth(newMonth);\r\n        setYear(newYear);\r\n    }\r\n\r\n    async function handleSave(updatedComponents) {\r\n        if (!kpi || !empId) return;\r\n\r\n        const payload = {\r\n            periodMonth: kpi.periodMonth,\r\n            periodYear: kpi.periodYear,\r\n            components: updatedComponents\r\n        };\r\n        console.log(\"Payload:\", JSON.stringify(payload, null, 2)); // log neatly formatted JSON\r\n\r\n        try {\r\n            const res = await fetch(`http://localhost:5038/api/kpi/self/${empId}/score`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload)\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const text = await res.text();\r\n                throw new Error(`HTTP ${res.status}: ${text}`);\r\n            }\r\n\r\n            const msg = await res.json();\r\n            console.log(\"Saved successfully:\", msg);\r\n\r\n            // Refresh state to reflect updated data\r\n            setKpi(prev => ({\r\n                ...prev,\r\n                components: updatedComponents\r\n            }));\r\n        } catch (err) {\r\n            console.error(\"Error saving self score:\", err);\r\n            alert(\"Lỗi khi lưu KPI: \" + err.message);\r\n        }\r\n    }\r\n\r\n\r\n    if (loading) return <p>Đang tải KPI...</p>;\r\n\r\n    return (\r\n        <KpiPageBase\r\n            kpiDto={kpi}\r\n            onPeriodChange={handlePeriodChange}\r\n            onSave={handleSave}\r\n        />\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}