{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\MyKpiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EmployeeKpiView from \"./EmployeeKpiView\";\nimport MonthYearSelector from \"../components/MonthYearSelector\"; // <-- adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyKpiPage = ({\n  empId\n}) => {\n  _s();\n  const today = new Date();\n  const [month, setMonth] = useState(today.getMonth() + 1);\n  const [year, setYear] = useState(today.getFullYear());\n  const [employeeKpi, setEmployeeKpi] = useState(null);\n  const [viewMode, setViewMode] = useState(\"view\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const canSelfScore = (() => {\n    // Only allow self-scoring after 3 days into the next month\n    const firstOfNextMonth = new Date(year, month, 1);\n    const threeDaysAfter = new Date(firstOfNextMonth);\n    threeDaysAfter.setDate(firstOfNextMonth.getDate() + 3);\n    return today >= threeDaysAfter;\n  })();\n  const fetchEmployeeKpi = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await axios.get(`/api/EmployeeKpi/${empId}?month=${month}&year=${year}`);\n      setEmployeeKpi(response.data);\n    } catch (err) {\n      console.error(err);\n      setEmployeeKpi(null);\n      setError(\"No KPI data found for this period.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (empId) fetchEmployeeKpi();\n  }, [empId, month, year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"My KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MonthYearSelector, {\n      selectedMonth: month,\n      selectedYear: year,\n      onChange: (m, y) => {\n        setMonth(m);\n        setYear(y);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded ${viewMode === \"view\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"}`,\n        onClick: () => setViewMode(\"view\"),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded ${viewMode === \"self-score\" ? \"bg-green-600 text-white\" : \"bg-gray-200 text-gray-800\"}`,\n        onClick: () => canSelfScore && setViewMode(\"self-score\"),\n        disabled: !canSelfScore,\n        children: \"Self Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), !canSelfScore && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Self scoring will be available 3 days after the month starts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-gray-500\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-gray-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : employeeKpi ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(EmployeeKpiView, {\n        employeeKpi: employeeKpi,\n        mode: viewMode,\n        onToggleMode: () => setViewMode(prev => prev === \"view\" ? \"self-score\" : \"view\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-gray-500\",\n      children: \"No KPI data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(MyKpiPage, \"fgYHPcrbTWWSlDGY3WBHqliPwCk=\");\n_c = MyKpiPage;\nexport default MyKpiPage;\nvar _c;\n$RefreshReg$(_c, \"MyKpiPage\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeKpiView","MonthYearSelector","jsxDEV","_jsxDEV","MyKpiPage","empId","_s","today","Date","month","setMonth","getMonth","year","setYear","getFullYear","employeeKpi","setEmployeeKpi","viewMode","setViewMode","loading","setLoading","error","setError","canSelfScore","firstOfNextMonth","threeDaysAfter","setDate","getDate","fetchEmployeeKpi","response","axios","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedMonth","selectedYear","onChange","m","y","onClick","disabled","mode","onToggleMode","prev","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/pages/MyKpiPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport EmployeeKpiView from \"./EmployeeKpiView\";\nimport MonthYearSelector from \"../components/MonthYearSelector\"; // <-- adjust path if needed\n\nconst MyKpiPage = ({ empId }) => {\n    const today = new Date();\n    const [month, setMonth] = useState(today.getMonth() + 1);\n    const [year, setYear] = useState(today.getFullYear());\n    const [employeeKpi, setEmployeeKpi] = useState(null);\n    const [viewMode, setViewMode] = useState(\"view\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const canSelfScore = (() => {\n        // Only allow self-scoring after 3 days into the next month\n        const firstOfNextMonth = new Date(year, month, 1);\n        const threeDaysAfter = new Date(firstOfNextMonth);\n        threeDaysAfter.setDate(firstOfNextMonth.getDate() + 3);\n        return today >= threeDaysAfter;\n    })();\n\n    const fetchEmployeeKpi = async () => {\n        try {\n            setLoading(true);\n            setError(\"\");\n\n            const response = await axios.get(\n                `/api/EmployeeKpi/${empId}?month=${month}&year=${year}`\n            );\n            setEmployeeKpi(response.data);\n        } catch (err) {\n            console.error(err);\n            setEmployeeKpi(null);\n            setError(\"No KPI data found for this period.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (empId) fetchEmployeeKpi();\n    }, [empId, month, year]);\n\n    return (\n        <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">My KPI</h1>\n\n            {/* Month/Year selector always visible */}\n            <MonthYearSelector\n                selectedMonth={month}\n                selectedYear={year}\n                onChange={(m, y) => {\n                    setMonth(m);\n                    setYear(y);\n                }}\n            />\n\n            {/* Toggle button + info */}\n            <div className=\"flex items-center gap-4 mt-4\">\n                <button\n                    className={`px-4 py-2 rounded ${viewMode === \"view\"\n                            ? \"bg-blue-600 text-white\"\n                            : \"bg-gray-200 text-gray-800\"\n                        }`}\n                    onClick={() => setViewMode(\"view\")}\n                >\n                    View\n                </button>\n\n                <button\n                    className={`px-4 py-2 rounded ${viewMode === \"self-score\"\n                            ? \"bg-green-600 text-white\"\n                            : \"bg-gray-200 text-gray-800\"\n                        }`}\n                    onClick={() => canSelfScore && setViewMode(\"self-score\")}\n                    disabled={!canSelfScore}\n                >\n                    Self Score\n                </button>\n\n                {!canSelfScore && (\n                    <p className=\"text-sm text-gray-500\">\n                        Self scoring will be available 3 days after the month starts.\n                    </p>\n                )}\n            </div>\n\n            {/* KPI Content */}\n            {loading ? (\n                <p className=\"mt-6 text-gray-500\">Loading...</p>\n            ) : error ? (\n                <p className=\"mt-6 text-gray-500\">{error}</p>\n            ) : employeeKpi ? (\n                <div className=\"mt-6\">\n                    <EmployeeKpiView\n                        employeeKpi={employeeKpi}\n                        mode={viewMode}\n                        onToggleMode={() =>\n                            setViewMode((prev) => (prev === \"view\" ? \"self-score\" : \"view\"))\n                        }\n                    />\n                </div>\n            ) : (\n                <p className=\"mt-6 text-gray-500\">No KPI data available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default MyKpiPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}