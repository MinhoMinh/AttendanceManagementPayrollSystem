{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\components\\\\KpiComponentTable.jsx\",\n  _s = $RefreshSig$();\n//import { useState } from \"react\";\n\n//export default function KpiComponentTable({ components, mode = \"view\", onChange, onSave }) {\n//    const editable = mode !== \"view\";\n//    const [localComponents, setLocalComponents] = useState(components || []);\n//    const [error, setError] = useState(\"\");\n\n//    const handleChange = (id, field, value) => {\n//        let val = value;\n//        if ([\"selfScore\", \"assignedScore\"].includes(field)) {\n//            val = parseFloat(value);\n//            if (val < 0) val = 0;\n//            if (val > 10) val = 10;\n//        }\n\n//        const updated = localComponents.map((c) =>\n//            c.kpiComponentId === id ? { ...c, [field]: val } : c\n//        );\n//        setLocalComponents(updated);\n//        if (onChange) onChange(id, field, val);\n//    };\n\n//    const handleAdd = () => {\n//        const newItem = {\n//            kpiComponentId: Date.now(),\n//            name: \"\",\n//            description: \"\",\n//            targetValue: 0,\n//            achievedValue: null,\n//            weight: 0,\n//            selfScore: null,\n//            assignedScore: null,\n//        };\n//        setLocalComponents([...localComponents, newItem]);\n//    };\n\n//    const handleRemove = (id) => {\n//        const updated = localComponents.filter((c) => c.kpiComponentId !== id);\n//        setLocalComponents(updated);\n//    };\n\n//    const isEditable = (field) => {\n//        switch (mode) {\n//            case \"self\":\n//                return [\"selfScore\", \"achievedValue\"].includes(field);\n//            case \"edit\":\n//                return ![\"selfScore\", \"assignedScore\", \"achievedValue\"].includes(field);\n//            case \"assign\":\n//                return field === \"assignedScore\";\n//            default:\n//                return false;\n//        }\n//    };\n\n//    const handleSave = () => {\n//        if (mode === \"edit\") {\n//            const totalWeight = localComponents.reduce(\n//                (sum, c) => sum + Number(c.weight || 0),\n//                0\n//            );\n//            if (totalWeight !== 100) {\n//                setError(\"Total weight of all components must equal 100.\");\n//                return;\n//            }\n//        }\n//        setError(\"\");\n//        if (onSave) onSave(localComponents);\n//    };\n\n//    return (\n//        <div>\n//            <table border=\"1\" cellPadding=\"5\" style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n//                <thead>\n//                    <tr>\n//                        <th>Name</th>\n//                        <th>Description</th>\n//                        <th>Target</th>\n//                        <th>Achieved</th>\n//                        <th>Weight</th>\n//                        <th>Self Score</th>\n//                        <th>Assigned Score</th>\n//                        {mode === \"edit\" && <th>Action</th>}\n//                    </tr>\n//                </thead>\n//                <tbody>\n//                    {localComponents.map((item) => (\n//                        <tr key={item.kpiComponentId}>\n//                            <td>\n//                                {isEditable(\"name\") ? (\n//                                    <input\n//                                        value={item.name}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"name\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.name\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"description\") ? (\n//                                    <input\n//                                        value={item.description}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"description\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.description\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"targetValue\") ? (\n//                                    <input\n//                                        type=\"number\"\n//                                        value={item.targetValue}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"targetValue\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.targetValue\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"achievedValue\") ? (\n//                                    <input\n//                                        type=\"number\"\n//                                        value={item.achievedValue ?? \"\"}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"achievedValue\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.achievedValue ?? \"-\"\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"weight\") ? (\n//                                    <input\n//                                        type=\"number\"\n//                                        value={item.weight}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"weight\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.weight\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"selfScore\") ? (\n//                                    <input\n//                                        type=\"number\"\n//                                        min=\"0\"\n//                                        max=\"10\"\n//                                        value={item.selfScore ?? \"\"}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"selfScore\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.selfScore ?? \"-\"\n//                                )}\n//                            </td>\n//                            <td>\n//                                {isEditable(\"assignedScore\") ? (\n//                                    <input\n//                                        type=\"number\"\n//                                        min=\"0\"\n//                                        max=\"10\"\n//                                        value={item.assignedScore ?? \"\"}\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"assignedScore\", e.target.value)}\n//                                    />\n//                                ) : (\n//                                    item.assignedScore ?? \"-\"\n//                                )}\n//                            </td>\n//                            {mode === \"edit\" && (\n//                                <td>\n//                                    <button onClick={() => handleRemove(item.kpiComponentId)}>Remove</button>\n//                                </td>\n//                            )}\n//                        </tr>\n//                    ))}\n//                </tbody>\n//            </table>\n\n//            {error && (\n//                <div style={{ color: \"red\", marginTop: \"10px\" }}>{error}</div>\n//            )}\n\n//            {mode === \"edit\" && (\n//                <div style={{ marginTop: \"10px\" }}>\n//                    <button onClick={handleAdd}>Add Component</button>\n//                </div>\n//            )}\n\n//            {mode !== \"view\" && onSave && (\n//                <div style={{ marginTop: \"10px\" }}>\n//                    <button onClick={handleSave}>Save</button>\n//                </div>\n//            )}\n\n//            {editable && (\n//                <button\n//                    onClick={() => onSave(components)}\n//                    style={{ marginTop: \"10px\", padding: \"8px 14px\" }}\n//                >\n//                    ðŸ’¾ LÆ°u thay Ä‘á»•i\n//                </button>\n//            )}\n//        </div>\n//    );\n//}\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KpiComponentTable({\n  components,\n  mode = \"view\",\n  onSave\n}) {\n  _s();\n  const editable = mode !== \"view\";\n  const [localComponents, setLocalComponents] = useState(components || []);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setLocalComponents(components || []);\n  }, [components]);\n  const handleChange = (id, field, value) => {\n    let val = value;\n    if ([\"selfScore\", \"assignedScore\"].includes(field)) {\n      val = parseFloat(value);\n      if (val < 0) val = 0;\n      if (val > 10) val = 10;\n    }\n    const updated = localComponents.map(c => c.kpiComponentId === id ? {\n      ...c,\n      [field]: val\n    } : c);\n    setLocalComponents(updated);\n  };\n  const handleAdd = () => {\n    const newItem = {\n      kpiComponentId: Date.now(),\n      name: \"\",\n      description: \"\",\n      targetValue: 0,\n      achievedValue: null,\n      weight: 0,\n      selfScore: null,\n      assignedScore: null\n    };\n    setLocalComponents([...localComponents, newItem]);\n  };\n  const handleRemove = id => {\n    const updated = localComponents.filter(c => c.kpiComponentId !== id);\n    setLocalComponents(updated);\n  };\n  const isEditable = field => {\n    switch (mode) {\n      case \"self\":\n        return [\"selfScore\", \"achievedValue\"].includes(field);\n      case \"edit\":\n        return ![\"selfScore\", \"assignedScore\", \"achievedValue\"].includes(field);\n      case \"assign\":\n        return field === \"assignedScore\";\n      default:\n        return false;\n    }\n  };\n  const handleSave = () => {\n    if (mode === \"edit\") {\n      const totalWeight = localComponents.reduce((sum, c) => sum + Number(c.weight || 0), 0);\n      if (totalWeight !== 100) {\n        setError(\"Total weight of all components must equal 100.\");\n        return;\n      }\n    }\n    setError(\"\");\n    onSave === null || onSave === void 0 ? void 0 : onSave(localComponents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      style: {\n        borderCollapse: \"collapse\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Target\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Achieved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Self Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assigned Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), mode === \"edit\" && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: localComponents.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [[\"name\", \"description\", \"targetValue\", \"achievedValue\", \"weight\", \"selfScore\", \"assignedScore\"].map(field => {\n            var _item$field, _item$field2;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditable(field) ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: [\"targetValue\", \"achievedValue\", \"weight\", \"selfScore\", \"assignedScore\"].includes(field) ? \"number\" : \"text\",\n                value: (_item$field = item[field]) !== null && _item$field !== void 0 ? _item$field : \"\",\n                onChange: e => handleChange(item.kpiComponentId, field, e.target.value),\n                min: [\"selfScore\", \"assignedScore\"].includes(field) ? \"0\" : undefined,\n                max: [\"selfScore\", \"assignedScore\"].includes(field) ? \"10\" : undefined\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this) : (_item$field2 = item[field]) !== null && _item$field2 !== void 0 ? _item$field2 : \"-\"\n            }, field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this);\n          }), mode === \"edit\" && /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemove(item.kpiComponentId),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 33\n          }, this)]\n        }, item.kpiComponentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }, this), mode === \"edit\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }, this), editable && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      style: {\n        marginTop: \"10px\",\n        padding: \"8px 14px\"\n      },\n      children: \"\\uD83D\\uDCBE L\\u01B0u thay \\u0111\\u1ED5i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 9\n  }, this);\n}\n_s(KpiComponentTable, \"/DNFmqU3iMw3MM27ALkGFZpYxxY=\");\n_c = KpiComponentTable;\nvar _c;\n$RefreshReg$(_c, \"KpiComponentTable\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","KpiComponentTable","components","mode","onSave","_s","editable","localComponents","setLocalComponents","error","setError","handleChange","id","field","value","val","includes","parseFloat","updated","map","c","kpiComponentId","handleAdd","newItem","Date","now","name","description","targetValue","achievedValue","weight","selfScore","assignedScore","handleRemove","filter","isEditable","handleSave","totalWeight","reduce","sum","Number","children","border","cellPadding","style","borderCollapse","width","fileName","_jsxFileName","lineNumber","columnNumber","item","_item$field","_item$field2","type","onChange","e","target","min","undefined","max","onClick","color","marginTop","padding","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/components/KpiComponentTable.jsx"],"sourcesContent":["//import { useState } from \"react\";\r\n\r\n//export default function KpiComponentTable({ components, mode = \"view\", onChange, onSave }) {\r\n//    const editable = mode !== \"view\";\r\n//    const [localComponents, setLocalComponents] = useState(components || []);\r\n//    const [error, setError] = useState(\"\");\r\n\r\n//    const handleChange = (id, field, value) => {\r\n//        let val = value;\r\n//        if ([\"selfScore\", \"assignedScore\"].includes(field)) {\r\n//            val = parseFloat(value);\r\n//            if (val < 0) val = 0;\r\n//            if (val > 10) val = 10;\r\n//        }\r\n\r\n//        const updated = localComponents.map((c) =>\r\n//            c.kpiComponentId === id ? { ...c, [field]: val } : c\r\n//        );\r\n//        setLocalComponents(updated);\r\n//        if (onChange) onChange(id, field, val);\r\n//    };\r\n\r\n//    const handleAdd = () => {\r\n//        const newItem = {\r\n//            kpiComponentId: Date.now(),\r\n//            name: \"\",\r\n//            description: \"\",\r\n//            targetValue: 0,\r\n//            achievedValue: null,\r\n//            weight: 0,\r\n//            selfScore: null,\r\n//            assignedScore: null,\r\n//        };\r\n//        setLocalComponents([...localComponents, newItem]);\r\n//    };\r\n\r\n//    const handleRemove = (id) => {\r\n//        const updated = localComponents.filter((c) => c.kpiComponentId !== id);\r\n//        setLocalComponents(updated);\r\n//    };\r\n\r\n//    const isEditable = (field) => {\r\n//        switch (mode) {\r\n//            case \"self\":\r\n//                return [\"selfScore\", \"achievedValue\"].includes(field);\r\n//            case \"edit\":\r\n//                return ![\"selfScore\", \"assignedScore\", \"achievedValue\"].includes(field);\r\n//            case \"assign\":\r\n//                return field === \"assignedScore\";\r\n//            default:\r\n//                return false;\r\n//        }\r\n//    };\r\n\r\n//    const handleSave = () => {\r\n//        if (mode === \"edit\") {\r\n//            const totalWeight = localComponents.reduce(\r\n//                (sum, c) => sum + Number(c.weight || 0),\r\n//                0\r\n//            );\r\n//            if (totalWeight !== 100) {\r\n//                setError(\"Total weight of all components must equal 100.\");\r\n//                return;\r\n//            }\r\n//        }\r\n//        setError(\"\");\r\n//        if (onSave) onSave(localComponents);\r\n//    };\r\n\r\n//    return (\r\n//        <div>\r\n//            <table border=\"1\" cellPadding=\"5\" style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n//                <thead>\r\n//                    <tr>\r\n//                        <th>Name</th>\r\n//                        <th>Description</th>\r\n//                        <th>Target</th>\r\n//                        <th>Achieved</th>\r\n//                        <th>Weight</th>\r\n//                        <th>Self Score</th>\r\n//                        <th>Assigned Score</th>\r\n//                        {mode === \"edit\" && <th>Action</th>}\r\n//                    </tr>\r\n//                </thead>\r\n//                <tbody>\r\n//                    {localComponents.map((item) => (\r\n//                        <tr key={item.kpiComponentId}>\r\n//                            <td>\r\n//                                {isEditable(\"name\") ? (\r\n//                                    <input\r\n//                                        value={item.name}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"name\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.name\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"description\") ? (\r\n//                                    <input\r\n//                                        value={item.description}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"description\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.description\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"targetValue\") ? (\r\n//                                    <input\r\n//                                        type=\"number\"\r\n//                                        value={item.targetValue}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"targetValue\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.targetValue\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"achievedValue\") ? (\r\n//                                    <input\r\n//                                        type=\"number\"\r\n//                                        value={item.achievedValue ?? \"\"}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"achievedValue\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.achievedValue ?? \"-\"\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"weight\") ? (\r\n//                                    <input\r\n//                                        type=\"number\"\r\n//                                        value={item.weight}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"weight\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.weight\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"selfScore\") ? (\r\n//                                    <input\r\n//                                        type=\"number\"\r\n//                                        min=\"0\"\r\n//                                        max=\"10\"\r\n//                                        value={item.selfScore ?? \"\"}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"selfScore\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.selfScore ?? \"-\"\r\n//                                )}\r\n//                            </td>\r\n//                            <td>\r\n//                                {isEditable(\"assignedScore\") ? (\r\n//                                    <input\r\n//                                        type=\"number\"\r\n//                                        min=\"0\"\r\n//                                        max=\"10\"\r\n//                                        value={item.assignedScore ?? \"\"}\r\n//                                        onChange={(e) => handleChange(item.kpiComponentId, \"assignedScore\", e.target.value)}\r\n//                                    />\r\n//                                ) : (\r\n//                                    item.assignedScore ?? \"-\"\r\n//                                )}\r\n//                            </td>\r\n//                            {mode === \"edit\" && (\r\n//                                <td>\r\n//                                    <button onClick={() => handleRemove(item.kpiComponentId)}>Remove</button>\r\n//                                </td>\r\n//                            )}\r\n//                        </tr>\r\n//                    ))}\r\n//                </tbody>\r\n//            </table>\r\n\r\n//            {error && (\r\n//                <div style={{ color: \"red\", marginTop: \"10px\" }}>{error}</div>\r\n//            )}\r\n\r\n//            {mode === \"edit\" && (\r\n//                <div style={{ marginTop: \"10px\" }}>\r\n//                    <button onClick={handleAdd}>Add Component</button>\r\n//                </div>\r\n//            )}\r\n\r\n//            {mode !== \"view\" && onSave && (\r\n//                <div style={{ marginTop: \"10px\" }}>\r\n//                    <button onClick={handleSave}>Save</button>\r\n//                </div>\r\n//            )}\r\n\r\n//            {editable && (\r\n//                <button\r\n//                    onClick={() => onSave(components)}\r\n//                    style={{ marginTop: \"10px\", padding: \"8px 14px\" }}\r\n//                >\r\n//                    ðŸ’¾ LÆ°u thay Ä‘á»•i\r\n//                </button>\r\n//            )}\r\n//        </div>\r\n//    );\r\n//}\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function KpiComponentTable({ components, mode = \"view\", onSave }) {\r\n    const editable = mode !== \"view\";\r\n    const [localComponents, setLocalComponents] = useState(components || []);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setLocalComponents(components || []);\r\n    }, [components]);\r\n\r\n    const handleChange = (id, field, value) => {\r\n        let val = value;\r\n        if ([\"selfScore\", \"assignedScore\"].includes(field)) {\r\n            val = parseFloat(value);\r\n            if (val < 0) val = 0;\r\n            if (val > 10) val = 10;\r\n        }\r\n\r\n        const updated = localComponents.map((c) =>\r\n            c.kpiComponentId === id ? { ...c, [field]: val } : c\r\n        );\r\n        setLocalComponents(updated);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        const newItem = {\r\n            kpiComponentId: Date.now(),\r\n            name: \"\",\r\n            description: \"\",\r\n            targetValue: 0,\r\n            achievedValue: null,\r\n            weight: 0,\r\n            selfScore: null,\r\n            assignedScore: null,\r\n        };\r\n        setLocalComponents([...localComponents, newItem]);\r\n    };\r\n\r\n    const handleRemove = (id) => {\r\n        const updated = localComponents.filter((c) => c.kpiComponentId !== id);\r\n        setLocalComponents(updated);\r\n    };\r\n\r\n    const isEditable = (field) => {\r\n        switch (mode) {\r\n            case \"self\":\r\n                return [\"selfScore\", \"achievedValue\"].includes(field);\r\n            case \"edit\":\r\n                return ![\"selfScore\", \"assignedScore\", \"achievedValue\"].includes(field);\r\n            case \"assign\":\r\n                return field === \"assignedScore\";\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (mode === \"edit\") {\r\n            const totalWeight = localComponents.reduce(\r\n                (sum, c) => sum + Number(c.weight || 0),\r\n                0\r\n            );\r\n            if (totalWeight !== 100) {\r\n                setError(\"Total weight of all components must equal 100.\");\r\n                return;\r\n            }\r\n        }\r\n        setError(\"\");\r\n        onSave?.(localComponents);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <table\r\n                border=\"1\"\r\n                cellPadding=\"5\"\r\n                style={{ borderCollapse: \"collapse\", width: \"100%\" }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>Target</th>\r\n                        <th>Achieved</th>\r\n                        <th>Weight</th>\r\n                        <th>Self Score</th>\r\n                        <th>Assigned Score</th>\r\n                        {mode === \"edit\" && <th>Action</th>}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {localComponents.map((item) => (\r\n                        <tr key={item.kpiComponentId}>\r\n                            {[\r\n                                \"name\",\r\n                                \"description\",\r\n                                \"targetValue\",\r\n                                \"achievedValue\",\r\n                                \"weight\",\r\n                                \"selfScore\",\r\n                                \"assignedScore\",\r\n                            ].map((field) => (\r\n                                <td key={field}>\r\n                                    {isEditable(field) ? (\r\n                                        <input\r\n                                            type={\r\n                                                [\"targetValue\", \"achievedValue\", \"weight\", \"selfScore\", \"assignedScore\"].includes(field)\r\n                                                    ? \"number\"\r\n                                                    : \"text\"\r\n                                            }\r\n                                            value={item[field] ?? \"\"}\r\n                                            onChange={(e) =>\r\n                                                handleChange(item.kpiComponentId, field, e.target.value)\r\n                                            }\r\n                                            min={[\"selfScore\", \"assignedScore\"].includes(field) ? \"0\" : undefined}\r\n                                            max={[\"selfScore\", \"assignedScore\"].includes(field) ? \"10\" : undefined}\r\n                                        />\r\n                                    ) : (\r\n                                        item[field] ?? \"-\"\r\n                                    )}\r\n                                </td>\r\n                            ))}\r\n                            {mode === \"edit\" && (\r\n                                <td>\r\n                                    <button onClick={() => handleRemove(item.kpiComponentId)}>\r\n                                        Remove\r\n                                    </button>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {error && <div style={{ color: \"red\", marginTop: \"10px\" }}>{error}</div>}\r\n\r\n            {mode === \"edit\" && (\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                    <button onClick={handleAdd}>Add Component</button>\r\n                </div>\r\n            )}\r\n\r\n            {editable && (\r\n                <button\r\n                    onClick={handleSave}\r\n                    style={{ marginTop: \"10px\", padding: \"8px 14px\" }}\r\n                >\r\n                    ðŸ’¾ LÆ°u thay Ä‘á»•i\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}