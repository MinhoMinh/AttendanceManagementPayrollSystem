{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\source\\\\repos\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\GeneratePayroll.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PayrollView from \"../components/PayrollView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneratePayroll() {\n  _s();\n  const [month, setMonth] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [payroll, setPayroll] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleGenerate = async () => {\n    if (!month || !year) {\n      setError(\"Please enter both month and year.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    setPayroll(null);\n    try {\n      const response = await fetch(\"http://localhost:5038/api/payroll/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: `Payroll-${month}-${year}`,\n          periodMonth: parseInt(month),\n          periodYear: parseInt(year),\n          createdBy: 3\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed: ${response.status}`);\n      }\n      const data = await response.json();\n      setPayroll(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payroll Generation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Month:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: month,\n          onChange: e => setMonth(e.target.value),\n          placeholder: \"e.g. 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Year:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: year,\n          onChange: e => setYear(e.target.value),\n          placeholder: \"e.g. 2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate Payroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), !loading && !error && payroll && /*#__PURE__*/_jsxDEV(PayrollView, {\n      payroll: payroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(GeneratePayroll, \"G6TdjSKSmviVVIb0BBPZOxvyalE=\");\n_c = GeneratePayroll;\nexport default GeneratePayroll;\nvar _c;\n$RefreshReg$(_c, \"GeneratePayroll\");","map":{"version":3,"names":["React","useState","PayrollView","jsxDEV","_jsxDEV","GeneratePayroll","_s","month","setMonth","year","setYear","loading","setLoading","payroll","setPayroll","error","setError","handleGenerate","response","fetch","method","headers","body","JSON","stringify","name","periodMonth","parseInt","periodYear","createdBy","ok","Error","status","data","json","err","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","placeholder","onClick","disabled","color","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/source/repos/AttendanceManagementPayrollSystem/ClientApp/src/pages/GeneratePayroll.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PayrollView from \"../components/PayrollView\";\r\n\r\nfunction GeneratePayroll() {\r\n    const [month, setMonth] = useState(\"\");\r\n    const [year, setYear] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [payroll, setPayroll] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleGenerate = async () => {\r\n        if (!month || !year) {\r\n            setError(\"Please enter both month and year.\");\r\n            return;\r\n        }\r\n\r\n        setError(\"\");\r\n        setLoading(true);\r\n        setPayroll(null);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5038/api/payroll/generate\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: `Payroll-${month}-${year}`,\r\n                    periodMonth: parseInt(month),\r\n                    periodYear: parseInt(year),\r\n                    createdBy: 3,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setPayroll(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"2rem\" }}>\r\n            <h1>Payroll Generation</h1>\r\n\r\n            <div style={{ marginBottom: \"1rem\" }}>\r\n                <label>\r\n                    Month:{\" \"}\r\n                    <input\r\n                        type=\"number\"\r\n                        value={month}\r\n                        onChange={(e) => setMonth(e.target.value)}\r\n                        placeholder=\"e.g. 10\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Year:{\" \"}\r\n                    <input\r\n                        type=\"number\"\r\n                        value={year}\r\n                        onChange={(e) => setYear(e.target.value)}\r\n                        placeholder=\"e.g. 2025\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button onClick={handleGenerate} disabled={loading}>\r\n                    {loading ? \"Generating...\" : \"Generate Payroll\"}\r\n                </button>\r\n            </div>\r\n\r\n            {/* ðŸ”¸ Show errors */}\r\n            {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\r\n\r\n            {/* ðŸ”¸ Show payroll only if success and not loading */}\r\n            {!loading && !error && payroll && (\r\n                <PayrollView payroll={payroll} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GeneratePayroll;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,KAAK,IAAI,CAACE,IAAI,EAAE;MACjBO,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACJ;IAEAA,QAAQ,CAAC,EAAE,CAAC;IACZJ,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,IAAI,EAAE,WAAWlB,KAAK,IAAIE,IAAI,EAAE;UAChCiB,WAAW,EAAEC,QAAQ,CAACpB,KAAK,CAAC;UAC5BqB,UAAU,EAAED,QAAQ,CAAClB,IAAI,CAAC;UAC1BoB,SAAS,EAAE;QACf,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,WAAWb,QAAQ,CAACc,MAAM,EAAE,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClCpB,UAAU,CAACmB,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACNxB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKiC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5BnC,OAAA;MAAAmC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BvC,OAAA;MAAKiC,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACjCnC,OAAA;QAAAmC,QAAA,GAAO,QACG,EAAC,GAAG,eACVnC,OAAA;UACIyC,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEvC,KAAM;UACbwC,QAAQ,EAAGC,CAAC,IAAKxC,QAAQ,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAC;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRvC,OAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNvC,OAAA;QAAAmC,QAAA,GAAO,OACE,EAAC,GAAG,eACTnC,OAAA;UACIyC,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAErC,IAAK;UACZsC,QAAQ,EAAGC,CAAC,IAAKtC,OAAO,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRvC,OAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNvC,OAAA;QAAQ+C,OAAO,EAAElC,cAAe;QAACmC,QAAQ,EAAEzC,OAAQ;QAAA4B,QAAA,EAC9C5B,OAAO,GAAG,eAAe,GAAG;MAAkB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAGL5B,KAAK,iBAAIX,OAAA;MAAGiC,KAAK,EAAE;QAAEgB,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,GAAC,SAAO,EAACxB,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGvD,CAAChC,OAAO,IAAI,CAACI,KAAK,IAAIF,OAAO,iBAC1BT,OAAA,CAACF,WAAW;MAACW,OAAO,EAAEA;IAAQ;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACrC,EAAA,CAjFQD,eAAe;AAAAiD,EAAA,GAAfjD,eAAe;AAmFxB,eAAeA,eAAe;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}