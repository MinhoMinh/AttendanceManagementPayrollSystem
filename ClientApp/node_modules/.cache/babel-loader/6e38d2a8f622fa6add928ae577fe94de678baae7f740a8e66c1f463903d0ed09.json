{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\components\\\\CustomButton.js\";\nimport React from \"react\";\nimport './CustomButton.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomButton = ({\n  // Nội dung\n  image,\n  icon,\n  // React icon component\n  label,\n  description,\n  // Styling\n  variant = \"primary\",\n  // primary, secondary, success, warning, danger, info\n  size = \"medium\",\n  // small, medium, large, xlarge hoặc số (px)\n  shape = \"rounded\",\n  // rounded, circle, square\n\n  // Colors\n  bgColor,\n  textColor,\n  hoverColor,\n  // Layout\n  direction = \"vertical\",\n  // vertical, horizontal\n  fullWidth = false,\n  // Behavior\n  disabled = false,\n  loading = false,\n  onClick,\n  // Animation\n  animation = \"scale\",\n  // scale, bounce, pulse, none\n\n  // Custom styles\n  customStyle = {},\n  className = \"\",\n  // Legacy props for backward compatibility\n  iconSize,\n  // Kích thước icon/ảnh (px)\n\n  // Accessibility\n  ariaLabel,\n  title\n}) => {\n  // Xử lý click event\n  const handleClick = e => {\n    if (disabled || loading) return;\n    if (onClick) onClick(e);\n  };\n\n  // Xử lý keyboard events\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick(e);\n    }\n  };\n\n  // Tạo class names\n  const buttonClasses = ['custom-button', `custom-button--${variant}`, `custom-button--${size}`, `custom-button--${shape}`, `custom-button--${direction}`, animation !== 'none' && `custom-button--${animation}`, fullWidth && 'custom-button--full-width', disabled && 'custom-button--disabled', loading && 'custom-button--loading', className].filter(Boolean).join(' ');\n\n  // Xử lý size (hỗ trợ cả string và number)\n  const getButtonSize = () => {\n    if (typeof size === 'number') {\n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        minHeight: `${size}px`\n      };\n    }\n    return {};\n  };\n\n  // Xử lý iconSize\n  const getIconSize = () => {\n    if (iconSize) {\n      return {\n        width: `${iconSize}px`,\n        height: `${iconSize}px`\n      };\n    }\n    return {};\n  };\n\n  // Inline styles\n  const inlineStyles = {\n    ...customStyle,\n    ...getButtonSize(),\n    ...(bgColor && {\n      '--button-bg-color': bgColor\n    }),\n    ...(textColor && {\n      '--button-text-color': textColor\n    }),\n    ...(hoverColor && {\n      '--button-hover-color': hoverColor\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: buttonClasses,\n    style: inlineStyles,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    tabIndex: disabled ? -1 : 0,\n    role: \"button\",\n    \"aria-label\": ariaLabel || label,\n    title: title || label,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-button__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-button__icon-container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-button__spinner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [icon && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-button__icon\",\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 24\n          }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: label,\n            className: \"custom-button__image\",\n            style: getIconSize()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), (label || description) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-button__text\",\n        children: [label && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"custom-button__label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), description && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"custom-button__description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-button__ripple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomButton;\nexport default CustomButton;\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomButton","image","icon","label","description","variant","size","shape","bgColor","textColor","hoverColor","direction","fullWidth","disabled","loading","onClick","animation","customStyle","className","iconSize","ariaLabel","title","handleClick","e","handleKeyDown","key","preventDefault","buttonClasses","filter","Boolean","join","getButtonSize","width","height","minHeight","getIconSize","inlineStyles","style","onKeyDown","tabIndex","role","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/components/CustomButton.js"],"sourcesContent":["import React from \"react\";\r\nimport './CustomButton.css';\r\n\r\nconst CustomButton = ({\r\n  // Nội dung\r\n  image,\r\n  icon, // React icon component\r\n  label,\r\n  description,\r\n  \r\n  // Styling\r\n  variant = \"primary\", // primary, secondary, success, warning, danger, info\r\n  size = \"medium\", // small, medium, large, xlarge hoặc số (px)\r\n  shape = \"rounded\", // rounded, circle, square\r\n  \r\n  // Colors\r\n  bgColor,\r\n  textColor,\r\n  hoverColor,\r\n  \r\n  // Layout\r\n  direction = \"vertical\", // vertical, horizontal\r\n  fullWidth = false,\r\n  \r\n  // Behavior\r\n  disabled = false,\r\n  loading = false,\r\n  onClick,\r\n  \r\n  // Animation\r\n  animation = \"scale\", // scale, bounce, pulse, none\r\n  \r\n  // Custom styles\r\n  customStyle = {},\r\n  className = \"\",\r\n  \r\n  // Legacy props for backward compatibility\r\n  iconSize, // Kích thước icon/ảnh (px)\r\n  \r\n  // Accessibility\r\n  ariaLabel,\r\n  title,\r\n}) => {\r\n  // Xử lý click event\r\n  const handleClick = (e) => {\r\n    if (disabled || loading) return;\r\n    if (onClick) onClick(e);\r\n  };\r\n\r\n  // Xử lý keyboard events\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      handleClick(e);\r\n    }\r\n  };\r\n\r\n  // Tạo class names\r\n  const buttonClasses = [\r\n    'custom-button',\r\n    `custom-button--${variant}`,\r\n    `custom-button--${size}`,\r\n    `custom-button--${shape}`,\r\n    `custom-button--${direction}`,\r\n    animation !== 'none' && `custom-button--${animation}`,\r\n    fullWidth && 'custom-button--full-width',\r\n    disabled && 'custom-button--disabled',\r\n    loading && 'custom-button--loading',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  // Xử lý size (hỗ trợ cả string và number)\r\n  const getButtonSize = () => {\r\n    if (typeof size === 'number') {\r\n      return {\r\n        width: `${size}px`,\r\n        height: `${size}px`,\r\n        minHeight: `${size}px`,\r\n      };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  // Xử lý iconSize\r\n  const getIconSize = () => {\r\n    if (iconSize) {\r\n      return {\r\n        width: `${iconSize}px`,\r\n        height: `${iconSize}px`,\r\n      };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  // Inline styles\r\n  const inlineStyles = {\r\n    ...customStyle,\r\n    ...getButtonSize(),\r\n    ...(bgColor && { '--button-bg-color': bgColor }),\r\n    ...(textColor && { '--button-text-color': textColor }),\r\n    ...(hoverColor && { '--button-hover-color': hoverColor }),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={buttonClasses}\r\n      style={inlineStyles}\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n      tabIndex={disabled ? -1 : 0}\r\n      role=\"button\"\r\n      aria-label={ariaLabel || label}\r\n      title={title || label}\r\n    >\r\n      <div className=\"custom-button__content\">\r\n        {/* Icon/Image container */}\r\n        <div className=\"custom-button__icon-container\">\r\n          {loading ? (\r\n            <div className=\"custom-button__spinner\">\r\n              <div className=\"spinner\"></div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {icon && <div className=\"custom-button__icon\">{icon}</div>}\r\n              {image && (\r\n                <img\r\n                  src={image}\r\n                  alt={label}\r\n                  className=\"custom-button__image\"\r\n                  style={getIconSize()}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text content */}\r\n        {(label || description) && (\r\n          <div className=\"custom-button__text\">\r\n            {label && (\r\n              <span className=\"custom-button__label\">{label}</span>\r\n            )}\r\n            {description && (\r\n              <span className=\"custom-button__description\">{description}</span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Ripple effect */}\r\n      <div className=\"custom-button__ripple\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EACpB;EACAC,KAAK;EACLC,IAAI;EAAE;EACNC,KAAK;EACLC,WAAW;EAEX;EACAC,OAAO,GAAG,SAAS;EAAE;EACrBC,IAAI,GAAG,QAAQ;EAAE;EACjBC,KAAK,GAAG,SAAS;EAAE;;EAEnB;EACAC,OAAO;EACPC,SAAS;EACTC,UAAU;EAEV;EACAC,SAAS,GAAG,UAAU;EAAE;EACxBC,SAAS,GAAG,KAAK;EAEjB;EACAC,QAAQ,GAAG,KAAK;EAChBC,OAAO,GAAG,KAAK;EACfC,OAAO;EAEP;EACAC,SAAS,GAAG,OAAO;EAAE;;EAErB;EACAC,WAAW,GAAG,CAAC,CAAC;EAChBC,SAAS,GAAG,EAAE;EAEd;EACAC,QAAQ;EAAE;;EAEV;EACAC,SAAS;EACTC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIV,QAAQ,IAAIC,OAAO,EAAE;IACzB,IAAIC,OAAO,EAAEA,OAAO,CAACQ,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAID,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACE,GAAG,KAAK,OAAO,IAAIF,CAAC,CAACE,GAAG,KAAK,GAAG,EAAE;MACtCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBJ,WAAW,CAACC,CAAC,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMI,aAAa,GAAG,CACpB,eAAe,EACf,kBAAkBtB,OAAO,EAAE,EAC3B,kBAAkBC,IAAI,EAAE,EACxB,kBAAkBC,KAAK,EAAE,EACzB,kBAAkBI,SAAS,EAAE,EAC7BK,SAAS,KAAK,MAAM,IAAI,kBAAkBA,SAAS,EAAE,EACrDJ,SAAS,IAAI,2BAA2B,EACxCC,QAAQ,IAAI,yBAAyB,EACrCC,OAAO,IAAI,wBAAwB,EACnCI,SAAS,CACV,CAACU,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;;EAE3B;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,OAAOzB,IAAI,KAAK,QAAQ,EAAE;MAC5B,OAAO;QACL0B,KAAK,EAAE,GAAG1B,IAAI,IAAI;QAClB2B,MAAM,EAAE,GAAG3B,IAAI,IAAI;QACnB4B,SAAS,EAAE,GAAG5B,IAAI;MACpB,CAAC;IACH;IACA,OAAO,CAAC,CAAC;EACX,CAAC;;EAED;EACA,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIhB,QAAQ,EAAE;MACZ,OAAO;QACLa,KAAK,EAAE,GAAGb,QAAQ,IAAI;QACtBc,MAAM,EAAE,GAAGd,QAAQ;MACrB,CAAC;IACH;IACA,OAAO,CAAC,CAAC;EACX,CAAC;;EAED;EACA,MAAMiB,YAAY,GAAG;IACnB,GAAGnB,WAAW;IACd,GAAGc,aAAa,CAAC,CAAC;IAClB,IAAIvB,OAAO,IAAI;MAAE,mBAAmB,EAAEA;IAAQ,CAAC,CAAC;IAChD,IAAIC,SAAS,IAAI;MAAE,qBAAqB,EAAEA;IAAU,CAAC,CAAC;IACtD,IAAIC,UAAU,IAAI;MAAE,sBAAsB,EAAEA;IAAW,CAAC;EAC1D,CAAC;EAED,oBACEb,OAAA;IACEqB,SAAS,EAAES,aAAc;IACzBU,KAAK,EAAED,YAAa;IACpBrB,OAAO,EAAEO,WAAY;IACrBgB,SAAS,EAAEd,aAAc;IACzBe,QAAQ,EAAE1B,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAE;IAC5B2B,IAAI,EAAC,QAAQ;IACb,cAAYpB,SAAS,IAAIjB,KAAM;IAC/BkB,KAAK,EAAEA,KAAK,IAAIlB,KAAM;IAAAsC,QAAA,gBAEtB5C,OAAA;MAAKqB,SAAS,EAAC,wBAAwB;MAAAuB,QAAA,gBAErC5C,OAAA;QAAKqB,SAAS,EAAC,+BAA+B;QAAAuB,QAAA,EAC3C3B,OAAO,gBACNjB,OAAA;UAAKqB,SAAS,EAAC,wBAAwB;UAAAuB,QAAA,eACrC5C,OAAA;YAAKqB,SAAS,EAAC;UAAS;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,gBAENhD,OAAA,CAAAE,SAAA;UAAA0C,QAAA,GACGvC,IAAI,iBAAIL,OAAA;YAAKqB,SAAS,EAAC,qBAAqB;YAAAuB,QAAA,EAAEvC;UAAI;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACzD5C,KAAK,iBACJJ,OAAA;YACEiD,GAAG,EAAE7C,KAAM;YACX8C,GAAG,EAAE5C,KAAM;YACXe,SAAS,EAAC,sBAAsB;YAChCmB,KAAK,EAAEF,WAAW,CAAC;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CACF;QAAA,eACD;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGL,CAAC1C,KAAK,IAAIC,WAAW,kBACpBP,OAAA;QAAKqB,SAAS,EAAC,qBAAqB;QAAAuB,QAAA,GACjCtC,KAAK,iBACJN,OAAA;UAAMqB,SAAS,EAAC,sBAAsB;UAAAuB,QAAA,EAAEtC;QAAK;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACrD,EACAzC,WAAW,iBACVP,OAAA;UAAMqB,SAAS,EAAC,4BAA4B;UAAAuB,QAAA,EAAErC;QAAW;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACjE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNhD,OAAA;MAAKqB,SAAS,EAAC;IAAuB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACG,EAAA,GAtJIhD,YAAY;AAwJlB,eAAeA,YAAY;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}