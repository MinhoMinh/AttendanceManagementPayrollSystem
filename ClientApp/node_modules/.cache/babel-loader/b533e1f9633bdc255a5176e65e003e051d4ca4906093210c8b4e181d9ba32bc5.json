{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\MyKpiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport KpiTable from \"../components/KpiTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyKpiPage({\n  empId\n}) {\n  _s();\n  const [kpiData, setKpiData] = useState(null);\n  const [phase, setPhase] = useState(\"SelfScore\"); // Employee can only self-score\n  const role = \"Employee\"; // Fixed role\n\n  useEffect(() => {\n    async function fetchKpi() {\n      try {\n        const res = await fetch(`/api/kpi/${empId}`);\n        if (!res.ok) throw new Error(\"Failed to fetch KPI\");\n        const data = await res.json();\n        setKpiData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchKpi();\n  }, [empId]);\n  const handleKpiChange = (compId, field, value) => {\n    setKpiData(prev => {\n      const newKpi = {\n        ...prev\n      };\n      const comp = newKpi.kpis[0].components.find(c => c.kpiComponentId === compId);\n      if (comp) comp[field] = value;\n      return newKpi;\n    });\n  };\n  const handleSave = async () => {\n    try {\n      await fetch(`/api/kpi/${empId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(kpiData)\n      });\n      alert(\"KPI saved successfully\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to save KPI\");\n    }\n  };\n  if (!kpiData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading your KPI...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 26\n  }, this);\n\n  // Assuming only 1 KPI per month\n  const currentKpi = kpiData.kpis[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"My KPI Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KpiTable, {\n      kpi: currentKpi,\n      role: role,\n      phase: phase,\n      onChange: handleKpiChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"mt-4 px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Save Self Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(MyKpiPage, \"28lBWoDFc38T+Bt60hVjntAFZrY=\");\n_c = MyKpiPage;\nvar _c;\n$RefreshReg$(_c, \"MyKpiPage\");","map":{"version":3,"names":["React","useState","useEffect","KpiTable","jsxDEV","_jsxDEV","MyKpiPage","empId","_s","kpiData","setKpiData","phase","setPhase","role","fetchKpi","res","fetch","ok","Error","data","json","err","console","error","handleKpiChange","compId","field","value","prev","newKpi","comp","kpis","components","find","c","kpiComponentId","handleSave","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","currentKpi","className","kpi","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/pages/MyKpiPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport KpiTable from \"../components/KpiTable\";\n\nexport default function MyKpiPage({ empId }) {\n    const [kpiData, setKpiData] = useState(null);\n    const [phase, setPhase] = useState(\"SelfScore\"); // Employee can only self-score\n    const role = \"Employee\"; // Fixed role\n\n    useEffect(() => {\n        async function fetchKpi() {\n            try {\n                const res = await fetch(`/api/kpi/${empId}`);\n                if (!res.ok) throw new Error(\"Failed to fetch KPI\");\n                const data = await res.json();\n                setKpiData(data);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        fetchKpi();\n    }, [empId]);\n\n    const handleKpiChange = (compId, field, value) => {\n        setKpiData((prev) => {\n            const newKpi = { ...prev };\n            const comp = newKpi.kpis[0].components.find(\n                (c) => c.kpiComponentId === compId\n            );\n            if (comp) comp[field] = value;\n            return newKpi;\n        });\n    };\n\n    const handleSave = async () => {\n        try {\n            await fetch(`/api/kpi/${empId}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(kpiData),\n            });\n            alert(\"KPI saved successfully\");\n        } catch (err) {\n            console.error(err);\n            alert(\"Failed to save KPI\");\n        }\n    };\n\n    if (!kpiData) return <div>Loading your KPI...</div>;\n\n    // Assuming only 1 KPI per month\n    const currentKpi = kpiData.kpis[0];\n\n    return (\n        <div className=\"p-4\">\n            <h2 className=\"text-xl font-bold mb-4\">My KPI Dashboard</h2>\n\n            <KpiTable\n                kpi={currentKpi}\n                role={role}\n                phase={phase}\n                onChange={handleKpiChange}\n            />\n\n            <button\n                onClick={handleSave}\n                className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded\"\n            >\n                Save Self Score\n            </button>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}