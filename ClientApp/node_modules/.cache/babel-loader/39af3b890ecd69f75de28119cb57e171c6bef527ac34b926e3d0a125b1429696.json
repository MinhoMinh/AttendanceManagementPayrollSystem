{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhooMinh\\\\Downloads\\\\SWP\\\\AttendanceManagementPayrollSystem\\\\ClientApp\\\\src\\\\pages\\\\MyKpiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport KpiTable from \"../components/KpiTable\";\nimport MonthYearSelector from \"../components/MonthYearSelector\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyKpiPage({\n  empId\n}) {\n  _s();\n  var _kpiData$kpis;\n  const role = \"Employee\";\n  const [kpiData, setKpiData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [phase, setPhase] = useState(\"ViewOnly\");\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    async function fetchKpi() {\n      try {\n        var _data$kpis$$values, _data$kpis;\n        setLoading(true);\n        const res = await fetch(`http://localhost:5038/api/kpi/${empId}?month=${month}&year=${year}`);\n        if (!res.ok) throw new Error(`Failed to fetch: ${res.statusText}`);\n        const data = await res.json();\n        const kpisArray = (_data$kpis$$values = (_data$kpis = data.kpis) === null || _data$kpis === void 0 ? void 0 : _data$kpis.$values) !== null && _data$kpis$$values !== void 0 ? _data$kpis$$values : [];\n        const kpis = kpisArray.map(k => {\n          var _k$components$$values, _k$components;\n          return {\n            ...k,\n            components: (_k$components$$values = (_k$components = k.components) === null || _k$components === void 0 ? void 0 : _k$components.$values) !== null && _k$components$$values !== void 0 ? _k$components$$values : []\n          };\n        });\n        setKpiData({\n          ...data,\n          kpis\n        });\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (empId) fetchKpi();\n  }, [empId, month, year]);\n\n  // Determine if self scoring is open (within 3 days after month end)\n  useEffect(() => {\n    const now = new Date();\n    const targetMonthEnd = new Date(year, month, 0); // last day of selected month\n    const diffDays = Math.floor((now - targetMonthEnd) / (1000 * 60 * 60 * 24));\n    const isSelfScoreWindow = diffDays >= 0 && diffDays <= 3;\n    setPhase(isSelfScoreWindow ? \"SelfScore\" : \"ViewOnly\");\n  }, [month, year]);\n  const handleKpiChange = (compId, field, value) => {\n    setKpiData(prev => {\n      if (!prev) return prev;\n      const newComponents = prev.kpis[0].components.map(comp => comp.kpiComponentId === compId ? {\n        ...comp,\n        [field]: value\n      } : comp);\n      const newKpis = [...prev.kpis];\n      newKpis[0] = {\n        ...newKpis[0],\n        components: newComponents\n      };\n      return {\n        ...prev,\n        kpis: newKpis\n      };\n    });\n  };\n  const handlePhaseToggle = () => {\n    setPhase(prev => prev === \"SelfScore\" ? \"ViewOnly\" : \"SelfScore\");\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading KPI data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-600\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (!kpiData || !((_kpiData$kpis = kpiData.kpis) !== null && _kpiData$kpis !== void 0 && _kpiData$kpis.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No KPI data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 51\n  }, this);\n  const currentKpi = kpiData.kpis[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"My KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MonthYearSelector, {\n      selectedMonth: month,\n      selectedYear: year,\n      onChange: (m, y) => {\n        setMonth(m);\n        setYear(y);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), !employeeKpi ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 mt-4\",\n      children: \"No KPI data available for this period.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(EmployeeKpiView, {\n        employeeKpi: employeeKpi,\n        mode: viewMode,\n        onToggleMode: () => setViewMode(prev => prev === \"view\" ? \"self-score\" : \"view\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(MyKpiPage, \"Rvp1q4U8cpxm7cBxFInU/y/a1Ec=\");\n_c = MyKpiPage;\nvar _c;\n$RefreshReg$(_c, \"MyKpiPage\");","map":{"version":3,"names":["React","useState","useEffect","KpiTable","MonthYearSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","MyKpiPage","empId","_s","_kpiData$kpis","role","kpiData","setKpiData","loading","setLoading","error","setError","phase","setPhase","month","setMonth","Date","getMonth","year","setYear","getFullYear","fetchKpi","_data$kpis$$values","_data$kpis","res","fetch","ok","Error","statusText","data","json","kpisArray","kpis","$values","map","k","_k$components$$values","_k$components","components","err","message","now","targetMonthEnd","diffDays","Math","floor","isSelfScoreWindow","handleKpiChange","compId","field","value","prev","newComponents","comp","kpiComponentId","newKpis","handlePhaseToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","currentKpi","selectedMonth","selectedYear","onChange","m","y","employeeKpi","EmployeeKpiView","mode","viewMode","onToggleMode","setViewMode","_c","$RefreshReg$"],"sources":["C:/Users/MinhooMinh/Downloads/SWP/AttendanceManagementPayrollSystem/ClientApp/src/pages/MyKpiPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport KpiTable from \"../components/KpiTable\";\nimport MonthYearSelector from \"../components/MonthYearSelector\";\n\nexport default function MyKpiPage({ empId }) {\n    const role = \"Employee\";\n\n    const [kpiData, setKpiData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [phase, setPhase] = useState(\"ViewOnly\");\n\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\n    const [year, setYear] = useState(new Date().getFullYear());\n\n    useEffect(() => {\n        async function fetchKpi() {\n            try {\n                setLoading(true);\n                const res = await fetch(`http://localhost:5038/api/kpi/${empId}?month=${month}&year=${year}`);\n                if (!res.ok) throw new Error(`Failed to fetch: ${res.statusText}`);\n                const data = await res.json();\n\n                const kpisArray = data.kpis?.$values ?? [];\n                const kpis = kpisArray.map((k) => ({\n                    ...k,\n                    components: k.components?.$values ?? [],\n                }));\n\n                setKpiData({ ...data, kpis });\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        if (empId) fetchKpi();\n    }, [empId, month, year]);\n\n    // Determine if self scoring is open (within 3 days after month end)\n    useEffect(() => {\n        const now = new Date();\n        const targetMonthEnd = new Date(year, month, 0); // last day of selected month\n        const diffDays = Math.floor((now - targetMonthEnd) / (1000 * 60 * 60 * 24));\n        const isSelfScoreWindow = diffDays >= 0 && diffDays <= 3;\n\n        setPhase(isSelfScoreWindow ? \"SelfScore\" : \"ViewOnly\");\n    }, [month, year]);\n\n    const handleKpiChange = (compId, field, value) => {\n        setKpiData((prev) => {\n            if (!prev) return prev;\n            const newComponents = prev.kpis[0].components.map((comp) =>\n                comp.kpiComponentId === compId ? { ...comp, [field]: value } : comp\n            );\n            const newKpis = [...prev.kpis];\n            newKpis[0] = { ...newKpis[0], components: newComponents };\n            return { ...prev, kpis: newKpis };\n        });\n    };\n\n    const handlePhaseToggle = () => {\n        setPhase((prev) => (prev === \"SelfScore\" ? \"ViewOnly\" : \"SelfScore\"));\n    };\n\n    if (loading) return <div>Loading KPI data...</div>;\n    if (error) return <div className=\"text-red-600\">Error: {error}</div>;\n    if (!kpiData || !kpiData.kpis?.length) return <div>No KPI data available.</div>;\n\n    const currentKpi = kpiData.kpis[0];\n\n    return (\n        <div className=\"p-6\">\n            <h1 className=\"text-xl font-bold mb-4\">My KPI</h1>\n\n            <MonthYearSelector\n                selectedMonth={month}\n                selectedYear={year}\n                onChange={(m, y) => {\n                    setMonth(m);\n                    setYear(y);\n                }}\n            />\n\n            {!employeeKpi ? (\n                <p className=\"text-gray-500 mt-4\">No KPI data available for this period.</p>\n            ) : (\n                <>\n                    <EmployeeKpiView\n                        employeeKpi={employeeKpi}\n                        mode={viewMode}\n                        onToggleMode={() =>\n                            setViewMode((prev) => (prev === \"view\" ? \"self-score\" : \"view\"))\n                        }\n                    />\n                </>\n            )}\n        </div>\n    );\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}